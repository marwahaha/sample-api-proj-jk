{
	"info": {
		"_postman_id": "8d12ffe0-1897-4e40-b41d-885a67b905a9",
		"name": "foolapi-integration-tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get-nodata-values",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "986ccda4-e49b-4def-b6a7-134c9cccffc5",
						"exec": [
							"\r",
							"//SPECIFIC TESTS\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.include.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is valid\", function () {\r",
							"     pm.response.to.be.withBody;\r",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
							"});\r",
							"\r",
							"\r",
							"// STANDARD TESTS FOR SUCCESS\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is error-free\", function () {\r",
							"     pm.response.to.not.be.error;\r",
							"     pm.response.to.not.have.jsonBody(\"error\"); \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5002/api/values",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5002",
					"path": [
						"api",
						"values"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-nodata-value-by-id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "986ccda4-e49b-4def-b6a7-134c9cccffc5",
						"exec": [
							"\r",
							"//SPECIFIC TESTS\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.include.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/plain\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response is valid\", function () {\r",
							"     pm.response.to.be.withBody;\r",
							"     pm.expect(pm.response.text()).to.include(\"value\");\r",
							"});\r",
							"\r",
							"// STANDARD TESTS FOR SUCCESS\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is error-free\", function () {\r",
							"     pm.response.to.not.be.error;\r",
							"     pm.response.to.not.have.jsonBody(\"error\"); \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5002/api/values/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5002",
					"path": [
						"api",
						"values",
						"1"
					]
				}
			},
			"response": []
		}
	]
}